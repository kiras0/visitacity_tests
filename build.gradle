plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    mavenCentral()
}

def restAssuredVersion = "5.3.1",
        allureVersion = "2.21.0",
        selenideVersion = "6.19.1",
        junitVersion = "5.10.0",
        ownerVersion = "1.0.12",
        javaFakerVersion = "1.0.2",
        assertjVersion = "3.24.2",
        webDriver = "5.6.2",
        slf = "2.0.7"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "org.slf4j:slf4j-simple:$slf",
            "io.github.bonigarcia:webdrivermanager:$webDriver"
    )
    dependencies {
        implementation "com.github.javafaker:javafaker:$javaFakerVersion"
    }
}


tasks.withType(Test) {
  systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task contactUs_test(type: Test) {
    useJUnitPlatform {
        includeTags("contactUs")
    }
}
task itinerary_test(type: Test) {
    useJUnitPlatform {
        includeTags("itinerary")
    }
}
task join_test(type: Test) {
    useJUnitPlatform {
        includeTags("join")
    }
}
task myPlan_test(type: Test) {
    useJUnitPlatform {
        includeTags("myPlan")
    }
}
task search_test(type: Test) {
    useJUnitPlatform {
        includeTags("search")
    }
}

